<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MockServer" Id="{b95df168-f5ce-4f3b-b8ce-14883b6dc7b8}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MockServer
VAR
	//Mock Server
	fbhttpClient : FB_IotHttpClient := (sHostName:='4446f140-18dd-4b14-8279-3cc341a02b1e.mock.pstmn.io',
								  	bKeepAlive:=TRUE, tConnectionTimeout:=T#10S);		
				
	//Get Request
	fbRequest : FB_IotHttpRequest;		
	state : (IDLE, SEND_REQUEST, WAIT_FOR_RESPONSE, READ_RESPONSE,ERROR,HEADER);			
	sendGetRequest: BOOL;
	debugContent : STRING(511);
	fbJsonParser : FB_JsonDomParser;
	jsonDoc				: SJsonValue;
	jsonArgsMember				: SJsonValue;
	jsonMachineName : SJsonValue;
	results : STRING;
	
	//Header
	fbHeaderField : FB_IotHttpHeaderFieldMap;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Init client parameters at startup
IF NOT fbhttpClient.bConfigured THEN 
	fbhttpClient.nHostPort:= 443; //80 for http  443 For https
	fbhttpClient.stTLS.bNoServerCertCheck:= TRUE;
END_IF

	
//Get Request
CASE state OF
	
	//Send Get Request
	IDLE:
		IF sendGetRequest THEN
			state := HEADER;
			sendGetRequest := FALSE;
		END_IF
	
	//Create Autorization Header File
	HEADER:
		fbHeaderField.AddField(sField:='Header1',sValue:='1',bAppendValue:=FALSE);
		fbHeaderField.AddField(sField:='Header2',sValue:='2',bAppendValue:=FALSE);
		state := SEND_REQUEST;
	
	//Send Get Request
	SEND_REQUEST:                                                                                      
		IF fbRequest.SendRequest(sUri:='/getmockdata', 
			fbClient:=fbhttpClient, eRequestType:=ETcIotHttpRequestType.HTTP_Get, 
				0, 0,fbHeader:=fbHeaderField ) THEN
			state := WAIT_FOR_RESPONSE;
		END_IF
	
	//Wait for Response
	WAIT_FOR_RESPONSE:

		IF NOT fbRequest.bBusy THEN
			IF fbRequest.bError THEN
				state := ERROR;
			ELSE
				state := READ_RESPONSE;
			END_IF
		END_IF
	
	//Read Response	
	READ_RESPONSE:
	
		//Get Response Content
		fbRequest.GetContent(pContent:= ADR(debugContent), nContentSize:= SIZEOF(debugContent), bSetNullTermination:= TRUE);
		
		//Check Status 
		IF fbRequest.nStatusCode >= 200 AND fbRequest.nStatusCode < 300 THEN
			jsonDoc:= fbRequest.GetJsonDomContent(fbJsonParser);
			
			//Check response has data in body
			IF jsonDoc <> 0 THEN
				
				//Check machine key is present 
				IF fbJsonParser.HasMember(jsonDoc, 'machine') THEN
					
					//Get Value for the specifed key
					jsonArgsMember:= fbJsonParser.FindMember(jsonDoc, 'machine');
					
					//Check wether data has an name key 	
					IF fbJsonParser.HasMember(jsonArgsMember, 'name')  THEN
						
						//Get Value for the specifed key
						jsonMachineName:= fbJsonParser.FindMember(jsonArgsMember, 'name');
						
							//Check data is a String
							IF fbJsonParser.IsString(jsonMachineName) THEN	
								
								//Get the Data 		
								results:= fbJsonParser.GetString(jsonMachineName);									
							END_IF
					END_IF
				END_IF
			END_IF
		END_IF
		state := IDLE;
		
	ERROR:
		//
		
		
END_CASE

//Cyclic Client 
fbhttpClient.Execute();]]></ST>
    </Implementation>
    <LineIds Name="MockServer">
      <LineId Id="24" Count="9" />
      <LineId Id="148" Count="0" />
      <LineId Id="34" Count="4" />
      <LineId Id="50" Count="0" />
      <LineId Id="149" Count="0" />
      <LineId Id="121" Count="0" />
      <LineId Id="123" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="150" Count="0" />
      <LineId Id="51" Count="6" />
      <LineId Id="151" Count="0" />
      <LineId Id="58" Count="9" />
      <LineId Id="152" Count="0" />
      <LineId Id="68" Count="1" />
      <LineId Id="153" Count="0" />
      <LineId Id="70" Count="1" />
      <LineId Id="154" Count="0" />
      <LineId Id="72" Count="2" />
      <LineId Id="155" Count="0" />
      <LineId Id="75" Count="1" />
      <LineId Id="156" Count="0" />
      <LineId Id="77" Count="0" />
      <LineId Id="157" Count="1" />
      <LineId Id="78" Count="1" />
      <LineId Id="159" Count="0" />
      <LineId Id="80" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="160" Count="0" />
      <LineId Id="81" Count="1" />
      <LineId Id="162" Count="0" />
      <LineId Id="83" Count="0" />
      <LineId Id="163" Count="1" />
      <LineId Id="84" Count="14" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>